{"map":"{\"version\":3,\"sources\":[\"/opt/text-recognition/client/src/restClient.js\",\"/opt/text-recognition/client/src/config.js\",\"/opt/text-recognition/client/src/App.js\",\"/opt/text-recognition/client/src/MetadataListView.js\",\"/opt/text-recognition/client/src/registerServiceWorker.js\",\"/opt/text-recognition/client/src/index.js\"],\"names\":[\"Config\",\"Object\",\"classCallCheck\",\"this\",\"serverUrl\",\"handleErrors\",\"response\",\"status\",\"json\",\"then\",\"Promise\",\"reject\",\"code\",\"message\",\"catch\",\"err\",\"resolve\",\"restClient\",\"uploadFile\",\"file\",\"title\",\"details\",\"formData\",\"FormData\",\"append\",\"fetch\",\"method\",\"body\",\"config\",\"headers\",\"content-type\",\"pageSize\",\"React\",\"Component\",\"initMetaDataPaged\",\"content\",\"totalSize\",\"page\",\"App\",\"props\",\"_this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"setStateAsync\",\"state\",\"setState\",\"toggleErrorAsync\",\"_ref\",\"asyncToGenerator\",\"regenerator_default\",\"a\",\"mark\",\"_callee\",\"error\",\"wrap\",\"_context\",\"prev\",\"next\",\"toggleModalAsync\",\"abrupt\",\"sent\",\"stop\",\"_x\",\"apply\",\"arguments\",\"_ref2\",\"_callee2\",\"_context2\",\"blocking\",\"modal\",\"modalMessage\",\"_x2\",\"fetchMetadata\",\"_ref3\",\"_callee3\",\"sizePerPage\",\"sortOrder\",\"sort\",\"metaDataPaged\",\"_context3\",\"fetchAll\",\"totalElements\",\"t0\",\"_x3\",\"_x4\",\"_x5\",\"handleInputChange\",\"event\",\"_this$setState\",\"target\",\"value\",\"type\",\"files\",\"name\",\"model\",\"year\",\"raw\",\"modelYear\",\"defineProperty\",\"onUpload\",\"_callee4\",\"result\",\"_context4\",\"Progress\",\"show\",\"console\",\"log\",\"size\",\"hide\",\"getMetadataColumns\",\"keysArr\",\"map\",\"e\",\"keys\",\"headerParams\",\"length\",\"k\",\"fieldName\",\"columnName\",\"isKey\",\"react_default\",\"createElement\",\"className\",\"lib_main_default\",\"reactstrap_es\",\"row\",\"for\",\"sm\",\"id\",\"Input\",\"placeholder\",\"onChange\",\"valid\",\"disabled\",\"color\",\"onClick\",\"isOpen\",\"toggle\",\"isLocalhost\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"registerValidSW\",\"swUrl\",\"navigator\",\"serviceWorker\",\"register\",\"registration\",\"onupdatefound\",\"installingWorker\",\"installing\",\"onstatechange\",\"controller\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"URL\",\"process\",\"origin\",\"addEventListener\",\"concat\",\"get\",\"indexOf\",\"ready\",\"unregister\",\"reload\",\"checkValidServiceWorker\",\"registerServiceWorker\"],\"mappings\":\"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\",\"sourcesContent\":[\"import Config from './config'\\n\\nconst c = new Config();\\n\\nfunction handleErrors(response) {\\n    if (!(response.status === 200 || response.status === 204 )) {\\n        return response.json()\\n            .then(response => {\\n                return Promise.reject({code: response.status, message: response.message});\\n            })\\n            .catch(err => {\\n                throw err;\\n            });\\n    } else {\\n        return response.status === 200 ? response.json() : new Promise(function (resolve, reject) {\\n            resolve();\\n        });\\n    }\\n}\\n\\nexport default {\\n   /* fetchAll: (page, sizePerPage, sortOrder) => {\\n        return fetch(\\n            c.serverUrl + '/api/v1/list?page=' + page + '&size=' + sizePerPage + '&sort=name,' + sortOrder)\\n            .then(handleErrors);\\n    },*/\\n    uploadFile: (file, title, details) => {\\n        const url = 'http://3.16.166.161:8080/api/uploadFile';\\n        const formData = new FormData();\\n        formData.append('file', file);\\n        formData.append('title', title);\\n        formData.append('details', details);\\n        const config = {\\n            headers: {\\n                'content-type': 'multipart/form-data'\\n            }\\n        };\\n\\n        return fetch(url, {\\n            method: 'POST',\\n            body: formData,\\n            config: config\\n        })\\n            .then(handleErrors);\\n\\n\\n    }\\n\\n}\\n\",\"export default class Config {\\n    constructor() {\\n    }\\n  serverUrl = \\\"http://localhost:9080\\\";\\n}\",\"import React, {Component} from 'react';\\nimport './App.css';\\nimport \\\"react-progress-2/main.css\\\";\\nimport Progress from \\\"react-progress-2\\\";\\nimport {\\n    ButtonGroup,\\n    Button,\\n    Col,\\n    Container,\\n    FormGroup,\\n    Input,\\n    Label,\\n    Modal,\\n    ModalBody,\\n    ModalFooter,\\n    ModalHeader,\\n    Row\\n} from 'reactstrap';\\nimport restClient from \\\"./restClient\\\";\\nimport MetadataListView from \\\"./MetadataListView\\\";\\n\\nconst pageSize = 10;\\nconst initMetaDataPaged = {\\n    content: [],\\n    totalSize: 0,\\n    page: 0\\n};\\n\\nclass App extends Component {\\n\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            file: \\\"\\\",\\n            title: \\\"\\\",\\n            details: \\\"\\\",\\n            error: \\\"\\\",\\n            metaDataPaged: initMetaDataPaged,\\n            modalMessage: \\\"\\\",\\n            modal: false,\\n            blocking: false,\\n\\t    model : '',\\n\\t    year: '',\\n\\t    raw : '',\\n\\t    modelYear: '',\\n        }\\n    }\\n\\n    componentDidMount() {\\n        //this.fetchMetadata(0, pageSize);\\n    }\\n\\n    setStateAsync = (state) => {\\n        return new Promise((resolve) => {\\n            this.setState(state, resolve)\\n        });\\n    };\\n\\n    toggleErrorAsync = async (error) => await this.toggleModalAsync(error);\\n\\n    toggleModalAsync = async (message) => {\\n        await this.setStateAsync((state) => ({\\n            blocking: !state.blocking,\\n            modal: !state.modal,\\n            modalMessage: state.modal ? \\\"\\\" : message\\n        }));\\n    };\\n\\n    //////////////////////// operations on test data with rest client //////////////////////////////\\n    fetchMetadata = async (page, sizePerPage, sortOrder) => {\\n        try {\\n            const sort = sortOrder || \\\"asc\\\";\\n            const response = await restClient.fetchAll(page, pageSize, sort);\\n            const metaDataPaged = {};\\n            metaDataPaged.content = response.content;\\n            metaDataPaged.totalSize = response.totalElements;\\n            metaDataPaged.page = page + 1;// rest api pages are 0-indexed while this component is 1-based indexed\\n            metaDataPaged.sizePerPage = sizePerPage;\\n            metaDataPaged.sortOrder = sort;\\n            await this.setStateAsync({metaDataPaged: metaDataPaged});\\n            return metaDataPaged;\\n        } catch (error) {\\n            await this.toggleErrorAsync(\\\"Cannot fetch tests\\\");\\n        }\\n    };\\n\\n    handleInputChange = (event) => {\\n        const target = event.target;\\n        const value = target.type === 'file' ? event.target.files[0] : target.value;\\n        const name = target.name;\\n\\tif(target.type === 'file'){\\n\\t\\tthis.setState({model : '',\\n            year: '',\\n            raw : '',\\n            modelYear: ''});\\n\\t}\\n        this.setState({\\n            [name]: value, error: \\\"\\\"\\n        });\\n    };\\n\\n    onUpload = async () => {\\n\\tProgress.show();\\n        try {\\n            const result = await restClient.uploadFile(this.state.file, this.state.title, this.state.details);\\n\\t    console.log(result);\\n\\t    this.setState({model: result.model, year: result.year, raw: result.raw, modelYear: result.size});\\n\\t    Progress.hide();\\n        } catch (e) {\\n\\t    Progress.hide();\\n            await this.toggleErrorAsync(e.message);\\n            return;\\n        }\\n        //await this.fetchMetadata(0, pageSize);\\n    }\\n    getMetadataColumns = () => {\\n        const keysArr = this.state.metaDataPaged.content.map(e => Object.keys(e));\\n        const keys = keysArr.length > 0 ? keysArr[0] : [];\\n        const headerParams = keys.map(k => {\\n            return {fieldName: k, columnName: k};\\n        });\\n        if (headerParams.length > 0) {\\n            // key attribute is required on one column\\n            headerParams[0].isKey = true;\\n        }\\n        return headerParams;\\n    };\\n\\n\\n    render() {\\n        return (\\n            <div className=\\\"App\\\">\\n\\t\\t<Progress.Component/>\\n                <Container>\\n                    <Row>\\n                        <Col>\\n                            <h6>Browse and Upload File to Extract Text</h6>\\n                        </Col>\\n                    </Row>\\n                    <Row>\\n                        <Col>\\n                            <FormGroup row>\\n                                <Label for=\\\"file\\\" sm={4}></Label>\\n                                <Col sm={8}>\\n                                    <Input type=\\\"file\\\" name=\\\"file\\\" id=\\\"file\\\"\\n                               Input       placeholder=\\\"Select a file for upload\\\"\\n                                           onChange={this.handleInputChange}\\n                                           valid={true}/>\\n                                </Col>\\n                            </FormGroup>                           \\n                        </Col>\\n\\n                    </Row>\\n                    <Row>\\n                        <Col>\\n                            <ButtonGroup>\\n                                <Button\\n                                    disabled={this.state.file === \\\"\\\"}\\n                                    color=\\\"primary\\\" size=\\\"md\\\"\\n                                    onClick={this.onUpload}>Upload</Button>\\n                            </ButtonGroup>\\n                        </Col>\\n                    </Row>\\n                    <Row>\\n                        <hr className={\\\"divider\\\"}/>\\n                    </Row>\\n\\t\\t\\t<Row>\\n<Col>\\n\\t<FormGroup row>\\n                                <Label sm={2}>ModelYear</Label>\\n                                <Col sm={10}>\\n                                   <label>{this.state.modelYear}</label>\\n                                </Col>\\n                            </FormGroup>\\n\\n                        <FormGroup row>\\n                                <Label sm={2}>Model</Label>\\n                                <Col sm={10}>\\n                                   <label>{this.state.model}</label>\\n                                </Col>\\n                            </FormGroup>\\n<FormGroup row>\\n                                <Label sm={2}>Year</Label>\\n                                <Col sm={10}>\\n                                    <label>{this.state.year}</label>\\n                                </Col>\\n                            </FormGroup>\\n<FormGroup row>\\n                                <Label sm={2}>Raw Text</Label>\\n                                <Col sm={10}>\\n                                    <label>{this.state.raw}</label>\\n                                </Col>\\n                            </FormGroup>\\n</Col>\\n                    </Row>\\n                    \\n                </Container>\\n\\n\\n                {/*Waiting modal*/}\\n                <Modal isOpen={this.state.blocking} toggle={() => false}\\n                       className={this.props.className}>\\n                    <ModalBody>\\n                        Loading...\\n                    </ModalBody>\\n                </Modal>\\n\\n\\n                {/*Error modal*/}\\n                <Modal isOpen={this.state.modal} className={this.props.className}>\\n                    <ModalHeader>{/*Error*/}</ModalHeader>\\n                    <ModalBody>\\n                        {this.state.modalMessage}\\n                    </ModalBody>\\n                    <ModalFooter>\\n                        <Button color=\\\"secondary\\\" onClick={this.toggleErrorAsync}>OK</Button>\\n                    </ModalFooter>\\n                </Modal>\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default App;\\n\",\"import React from 'react';\\nimport {\\n    BootstrapTable,\\n    TableHeaderColumn\\n} from 'react-bootstrap-table';\\n\\nexport default class MetadataListView extends React.Component {\\n    constructor(props) {\\n        super(props);\\n        this.handlePageChange = this.handlePageChange.bind(this);\\n        this.handleSizePerPageChange = this.handleSizePerPageChange.bind(this);\\n    }\\n\\n    handlePageChange(page, sizePerPage) {\\n        this.props.fetchData(page-1, sizePerPage); // rest api pages are 0-indexed while this component is 1-based indexed\\n    }\\n\\n    handleSizePerPageChange(sizePerPage) {\\n        // When changing the size per page always navigating to the first page\\n        this.props.fetchData(this.props.testId,0, sizePerPage);\\n    }\\n\\n    render() {\\n\\n        const options = {\\n            onSortChange: this.handleSort,\\n            onPageChange: this.handlePageChange,\\n            onSizePerPageList: this.handleSizePerPageChange,\\n            page: this.props.page,\\n            hideSizePerPage: true,\\n        };\\n\\n        return (\\n            <BootstrapTable data={this.props.data}\\n                            remote={true}\\n                            fetchInfo={{dataTotalSize: this.props.totalSize}}\\n                            pagination={true}\\n                            options={options}\\n                            hover={true}\\n                            bodyStyle={{overflow: 'overlay'}}\\n                            scrollTop={ 'Bottom'}\\n            >\\n\\n                {this.props.columns.length === 0 ? <TableHeaderColumn key=\\\"1\\\" dataField={\\\"empty\\\"}\\n                                                                      isKey={true}></TableHeaderColumn> :\\n                    this.props.columns.map(\\n                        c => <TableHeaderColumn key={c.columnName} dataField={c.fieldName} width='150px'\\n                                                isKey={c.isKey}\\n                                                dataSort={c.dataSort}>{c.columnName}</TableHeaderColumn>)}\\n            </BootstrapTable>\\n        );\\n    }\\n}\",\"// In production, we register a service worker to serve assets from local cache.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on the \\\"N+1\\\" visit to a page, since previously\\n// cached resources are updated in the background.\\n\\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\\n// This link also includes instructions on opting out of this behavior.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport default function register() {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Lets check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl);\\n      } else {\\n        // Is not local host. Just register service worker\\n        registerValidSW(swUrl);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the old content will have been purged and\\n              // the fresh content will have been added to the cache.\\n              // It's the perfect time to display a \\\"New content is\\n              // available; please refresh.\\\" message in your web app.\\n              console.log('New content is available; please refresh.');\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport registerServiceWorker from './registerServiceWorker';\\nimport 'bootstrap/dist/css/bootstrap.css';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\nregisterServiceWorker();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{106:function(e,t,n){\"use strict\";n.r(t);var a=n(1),r=n.n(a),o=n(5),l=n.n(o),c=(n(49),n(21)),s=n(7),i=n.n(s),u=n(11),m=n(9),d=n(13),f=n(16),p=n(14),h=n(15),g=(n(53),n(55),n(12)),E=n.n(g),w=n(3);new function e(){Object(m.a)(this,e),this.serverUrl=\"http://localhost:9080\"};function v(e){return 200!==e.status&&204!==e.status?e.json().then(function(e){return Promise.reject({code:e.status,message:e.message})}).catch(function(e){throw e}):200===e.status?e.json():new Promise(function(e,t){e()})}var b={uploadFile:function(e,t,n){var a=new FormData;a.append(\"file\",e),a.append(\"title\",t),a.append(\"details\",n);return fetch(\"http://3.16.166.161:8080/api/uploadFile\",{method:\"POST\",body:a,config:{headers:{\"content-type\":\"multipart/form-data\"}}}).then(v)}},y=n(8),k=n(17),j=(r.a.Component,10),O={content:[],totalSize:0,page:0},x=function(e){function t(e){var n;return Object(m.a)(this,t),(n=Object(f.a)(this,Object(p.a)(t).call(this,e))).setStateAsync=function(e){return new Promise(function(t){n.setState(e,t)})},n.toggleErrorAsync=function(){var e=Object(u.a)(i.a.mark(function e(t){return i.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,n.toggleModalAsync(t);case 2:return e.abrupt(\"return\",e.sent);case 3:case\"end\":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}(),n.toggleModalAsync=function(){var e=Object(u.a)(i.a.mark(function e(t){return i.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,n.setStateAsync(function(e){return{blocking:!e.blocking,modal:!e.modal,modalMessage:e.modal?\"\":t}});case 2:case\"end\":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}(),n.fetchMetadata=function(){var e=Object(u.a)(i.a.mark(function e(t,a,r){var o,l,c;return i.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,o=r||\"asc\",e.next=4,b.fetchAll(t,j,o);case 4:return l=e.sent,(c={}).content=l.content,c.totalSize=l.totalElements,c.page=t+1,c.sizePerPage=a,c.sortOrder=o,e.next=13,n.setStateAsync({metaDataPaged:c});case 13:return e.abrupt(\"return\",c);case 16:return e.prev=16,e.t0=e.catch(0),e.next=20,n.toggleErrorAsync(\"Cannot fetch tests\");case 20:case\"end\":return e.stop()}},e,this,[[0,16]])}));return function(t,n,a){return e.apply(this,arguments)}}(),n.handleInputChange=function(e){var t,a=e.target,r=\"file\"===a.type?e.target.files[0]:a.value,o=a.name;\"file\"===a.type&&n.setState({model:\"\",year:\"\",raw:\"\",modelYear:\"\"}),n.setState((t={},Object(c.a)(t,o,r),Object(c.a)(t,\"error\",\"\"),t))},n.onUpload=Object(u.a)(i.a.mark(function e(){var t;return i.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return E.a.show(),e.prev=1,e.next=4,b.uploadFile(n.state.file,n.state.title,n.state.details);case 4:t=e.sent,console.log(t),n.setState({model:t.model,year:t.year,raw:t.raw,modelYear:t.size}),E.a.hide(),e.next=16;break;case 10:return e.prev=10,e.t0=e.catch(1),E.a.hide(),e.next=15,n.toggleErrorAsync(e.t0.message);case 15:return e.abrupt(\"return\");case 16:case\"end\":return e.stop()}},e,this,[[1,10]])})),n.getMetadataColumns=function(){var e=n.state.metaDataPaged.content.map(function(e){return Object.keys(e)}),t=(e.length>0?e[0]:[]).map(function(e){return{fieldName:e,columnName:e}});return t.length>0&&(t[0].isKey=!0),t},n.state={file:\"\",title:\"\",details:\"\",error:\"\",metaDataPaged:O,modalMessage:\"\",modal:!1,blocking:!1,model:\"\",year:\"\",raw:\"\",modelYear:\"\"},n}return Object(h.a)(t,e),Object(d.a)(t,[{key:\"componentDidMount\",value:function(){}},{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"App\"},r.a.createElement(E.a.Component,null),r.a.createElement(w.d,null,r.a.createElement(w.l,null,r.a.createElement(w.c,null,r.a.createElement(\"h6\",null,\"Browse and Upload File to Extract Text\"))),r.a.createElement(w.l,null,r.a.createElement(w.c,null,r.a.createElement(w.e,{row:!0},r.a.createElement(w.g,{for:\"file\",sm:4}),r.a.createElement(w.c,{sm:8},r.a.createElement(w.f,{type:\"file\",name:\"file\",id:\"file\",Input:!0,placeholder:\"Select a file for upload\",onChange:this.handleInputChange,valid:!0}))))),r.a.createElement(w.l,null,r.a.createElement(w.c,null,r.a.createElement(w.b,null,r.a.createElement(w.a,{disabled:\"\"===this.state.file,color:\"primary\",size:\"md\",onClick:this.onUpload},\"Upload\")))),r.a.createElement(w.l,null,r.a.createElement(\"hr\",{className:\"divider\"})),r.a.createElement(w.l,null,r.a.createElement(w.c,null,r.a.createElement(w.e,{row:!0},r.a.createElement(w.g,{sm:2},\"ModelYear\"),r.a.createElement(w.c,{sm:10},r.a.createElement(\"label\",null,this.state.modelYear))),r.a.createElement(w.e,{row:!0},r.a.createElement(w.g,{sm:2},\"Model\"),r.a.createElement(w.c,{sm:10},r.a.createElement(\"label\",null,this.state.model))),r.a.createElement(w.e,{row:!0},r.a.createElement(w.g,{sm:2},\"Year\"),r.a.createElement(w.c,{sm:10},r.a.createElement(\"label\",null,this.state.year))),r.a.createElement(w.e,{row:!0},r.a.createElement(w.g,{sm:2},\"Raw Text\"),r.a.createElement(w.c,{sm:10},r.a.createElement(\"label\",null,this.state.raw)))))),r.a.createElement(w.h,{isOpen:this.state.blocking,toggle:function(){return!1},className:this.props.className},r.a.createElement(w.i,null,\"Loading...\")),r.a.createElement(w.h,{isOpen:this.state.modal,className:this.props.className},r.a.createElement(w.k,null),r.a.createElement(w.i,null,this.state.modalMessage),r.a.createElement(w.j,null,r.a.createElement(w.a,{color:\"secondary\",onClick:this.toggleErrorAsync},\"OK\"))))}}]),t}(a.Component),A=Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function C(e){navigator.serviceWorker.register(e).then(function(e){e.onupdatefound=function(){var t=e.installing;t.onstatechange=function(){\"installed\"===t.state&&(navigator.serviceWorker.controller?console.log(\"New content is available; please refresh.\"):console.log(\"Content is cached for offline use.\"))}}}).catch(function(e){console.error(\"Error during service worker registration:\",e)})}n(104);l.a.render(r.a.createElement(x,null),document.getElementById(\"root\")),function(){if(\"serviceWorker\"in navigator){if(new URL(\"\",window.location).origin!==window.location.origin)return;window.addEventListener(\"load\",function(){var e=\"\".concat(\"\",\"/service-worker.js\");A?function(e){fetch(e).then(function(t){404===t.status||-1===t.headers.get(\"content-type\").indexOf(\"javascript\")?navigator.serviceWorker.ready.then(function(e){e.unregister().then(function(){window.location.reload()})}):C(e)}).catch(function(){console.log(\"No internet connection found. App is running in offline mode.\")})}(e):C(e)})}}()},44:function(e,t,n){e.exports=n(106)},49:function(e,t,n){},53:function(e,t,n){}},[[44,2,1]]]);","extractedComments":[]}